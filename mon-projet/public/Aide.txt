// ----------------------------------------------------------------------
// Etape pour créé un composant Modale Coorection
// |
// 1. Crée le Modale.vue dans les fichiers
// 2. Rajouter template et créer, script et style dans le modale
// 2.1    <div class="bloc-modale" v-if="revele">

            <div class="overlay"></div>

            <div class="modale card">
                <div class="btn-modale btn btn-danger">X</div>
                <h2>Le contenue de la modale</h2>
            </div>

        </div>
// 3. Créer le export et les props    export default {
        name:'Modale',
        props:['revele', 'togglModale']
    }
// 4. Le style .bloc-modale {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
// 5. Importer le modale dans le parent   import Modale from './Modale.vue'
// 6. Le rajouter dans le components parent   components: {
            'texte1':Texte1,
            'texte2':Texte2,
            'modale':Modale
        },
// 7. On l'affiche dans le parent <modale></modale>
// 8. Le css de la modale dans le style .overlay{
    background: rgba(0,0,0,0.5);
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}
.modale {
    background: #f1f1f1;
    color: #333;
    padding: 50px;
    position: fixed;
    bottom: 10%;
}
.btn-modale{
    position: absolute;
    top: 10px;
    right: 10px;
}
9. Créer revele dans les data du parent   revele:false,
10. Dans le parent on bind pour pouvoir l'utiliser dans l'enfant
    <modale v-bind:revele="revele"></modale>
11. Dans l'enfant -> <div class="bloc-modale" v-if="revele">
POur l'activer que so revele = true (de base il est false)
12. Créer notre button dans le parent et lui ajouter v-on
 <div v-on:click="togglModale" class="btn btn-success">Ouvrir la modale</div>
 13. Créer la méthode Toggle modale dans methods

     On recupere revele et return l'inverse au click
     Mais à ce stade au click on ne peut plus click nul part
     toggleModale:function(){
             this.revele = !this.revele
         }
14. On veut fermer la modale au CLICK sur OVERLAY et BTN DANGER X
Pour ca on doit faire passer la methode dans  MODALE.VUE 
donc on fait : <modale v-bind:revele="revele" v-bind:toggleModale="toggleModale"></modale>
C'est pareille que pour le revele (10.)
15. Il suffit d'ajouter la method toggleModale grace a v-on:click aux BUTTON & OVERLAY
 <div v-on:click="toggleModale" class="overlay"></div>

     <div v-on:click="toggleModale" class="btn-modale btn btn-danger">x</div>

-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
Etape pour utiliser une api avec axios
1. installer axios -> npm install axios
2. Aller dans export default{} et utiliser grace a mounted
Ici le get va chercher les données de l'API "cat"
  mounted(){
            axios
            .get('https://api.thecatapi.com/v1/images/search') 
        }
Ensuite on utilise then 
             mounted(){
            axios
            .get('https://api.thecatapi.com/v1/images/search')
            .then(reponse => {
                console.log(reponse);
            }) 
        }
On a envie de mettre dans des données ce que l'on recupère
 urlImg: null,
Ensuite on revient à mounted au lieu du log on recupere l'url dans data index 0 -> url 
  mounted(){
            axios
            .get('https://api.thecatapi.com/v1/images/search')
            .then(reponse => {
               this.urlImg = reponse.data[0].url;
            }) 
        }
3. Attention quand on lie les données à la balise <img> ne pas se tromper
On lie la src de l'image à l'url récupérée
<img v-bind:src="urlImg" >